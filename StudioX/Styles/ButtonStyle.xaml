<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="btnMarker"
           TargetType="{x:Type Button}">
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="Control.Foreground"
                Value="#FF287DDC" />
        <Setter Property="Control.FontSize"
                Value="12" />
        <Setter Property="Control.FontWeight"
                Value="Medium" />
        <Setter Property="Control.BorderThickness"
                Value="0" />
        <Setter Property="FrameworkElement.Cursor"
                Value="Hand" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            CornerRadius="2"
                            SnapsToDevicePixels="True">
                        <TextBlock Name="contentPresenter"
                                   Margin="{TemplateBinding Control.Padding}"
                                   HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                   Focusable="False"
                                   TextBlock.FontFamily="{TemplateBinding Control.FontFamily}"
                                   TextBlock.FontSize="{TemplateBinding Control.FontSize}"
                                   TextBlock.Foreground="{TemplateBinding Control.Foreground}"
                                   SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                   Text="{TemplateBinding ContentControl.Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted"
                                 Value="True">
                            <Setter TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                    Property="Border.BorderBrush" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="Border.Background"
                                    Value="#FF59ABF0" />
                            <Setter TargetName="border"
                                    Property="Border.BorderBrush"
                                    Value="#FF3C7FB1" />
                            <Setter TargetName="contentPresenter"
                                    Property="TextBlock.Foreground"
                                    Value="#FFFFFFFF" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="Border.Background"
                                    Value="#FFC4E5F6" />
                            <Setter TargetName="border"
                                    Property="Border.BorderBrush"
                                    Value="#FF2C628B" />
                            <Setter TargetName="contentPresenter"
                                    Property="TextBlock.Foreground"
                                    Value="#FFFFFFFF" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter TargetName="border"
                                    Property="Border.Background"
                                    Value="#FF8B8B8B" />
                            <Setter TargetName="border"
                                    Property="Border.BorderBrush"
                                    Value="#FFADB2B5" />
                            <Setter TargetName="contentPresenter"
                                    Property="TextElement.Foreground"
                                    Value="#FF222222" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnExpandStyle"
           BasedOn="{StaticResource btnMarker}"
           TargetType="{x:Type Button}">
        <Setter Property="Control.Padding"
                Value="5,0,5,0" />
        <Setter Property="FrameworkElement.HorizontalAlignment"
                Value="Right" />
        <Setter Property="FrameworkElement.VerticalAlignment"
                Value="Center" />
        <Setter Property="Control.Background"
                Value="#FFDDDDDD" />
        <Setter Property="Control.Foreground"
                Value="#FF8A8EAB" />
        <Setter Property="Control.FontFamily"
                Value="{StaticResource iconfont}" />
        <Setter Property="FrameworkElement.Height"
                Value="40" />
    </Style>
    <Style x:Key="BlueButton"
           TargetType="{x:Type Button}">
        <Setter Property="Control.Background"
                Value="#FF287DDC" />
        <Setter Property="Control.Foreground"
                Value="#FFFFFFFF" />
        <Setter Property="Control.FontSize"
                Value="16" />
        <Setter Property="Control.FontWeight"
                Value="Regular" />
        <Setter Property="Control.FontFamily"
                Value="微软雅黑" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            CornerRadius="2"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Name="contentPresenter"
                                          Margin="{TemplateBinding Control.Padding}"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted"
                                 Value="True">
                            <Setter TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                    Property="Border.BorderBrush" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="Border.Background"
                                    Value="#FF59ABF0" />
                            <Setter TargetName="border"
                                    Property="Border.BorderBrush"
                                    Value="#FF3C7FB1" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="Border.Background"
                                    Value="#FFC4E5F6" />
                            <Setter TargetName="border"
                                    Property="Border.BorderBrush"
                                    Value="#FF2C628B" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter TargetName="border"
                                    Property="Border.Background"
                                    Value="#FF8B8B8B" />
                            <Setter TargetName="border"
                                    Property="Border.BorderBrush"
                                    Value="#FFADB2B5" />
                            <Setter TargetName="contentPresenter"
                                    Property="TextElement.Foreground"
                                    Value="#FF222222" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnEmptyButton"
           TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Cursor"
                Value="Hand" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter Name="contentPresenter"
                                      Margin="{TemplateBinding Control.Padding}"
                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                      Focusable="False"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnStyleSaveTemplate"
           TargetType="{x:Type Button}">
        <Setter Property="Control.Foreground"
                Value="#FF7D8198" />
        <Setter Property="Control.Padding"
                Value="0" />
        <Setter Property="FrameworkElement.Margin"
                Value="15,0,0,0" />
        <Setter Property="Control.FontSize"
                Value="12" />
        <Setter Property="FrameworkElement.Cursor"
                Value="Hand" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter Name="contentPresenter"
                                      Margin="{TemplateBinding Control.Padding}"
                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                      Focusable="False"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FF3581D8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnUserInfo"
           TargetType="{x:Type Button}">
        <Setter Property="Control.Foreground"
                Value="#FF454859" />
        <Setter Property="Control.FontSize"
                Value="12" />
        <Setter Property="Control.FontWeight"
                Value="Regular" />
        <Setter Property="FrameworkElement.Cursor"
                Value="Hand" />
        <Setter Property="Control.FontFamily"
                Value="FontFamily" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter Name="contentPresenter"
                                          Margin="{TemplateBinding Control.Padding}"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        <Path Name="ArrowDownPath"
                              Grid.Column="1"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Center"
                              Data="M0,0L7,0 3.5,5z"
                              Fill="#FF454859" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True" />
                        <Trigger Property="ButtonBase.IsPressed"
                                 Value="True" />
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnIncrease"
           TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Cursor"
                Value="Hand" />
        <Setter Property="Control.Foreground"
                Value="#FF666666" />
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="FrameworkElement.Margin"
                Value="7,0,7,0" />
        <Setter Property="FrameworkElement.Width"
                Value="12" />
        <Setter Property="FrameworkElement.Height"
                Value="12" />
        <Setter Property="FrameworkElement.VerticalAlignment"
                Value="Center" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="#00FFFFFF"
                            BorderThickness="0">
                        <ContentPresenter Name="content"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding ContentControl.Content}"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnFill"
           TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Cursor"
                Value="Hand" />
        <Setter Property="Control.Foreground"
                Value="#FF454859" />
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="Control.FontSize"
                Value="14" />
        <Setter Property="FrameworkElement.VerticalAlignment"
                Value="Center" />
        <Setter Property="FrameworkElement.Margin"
                Value="30,0,0,0" />
        <Setter Property="Control.FontFamily"
                Value="{StaticResource iconfont}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Chrome"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Name="content"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          Content="{TemplateBinding ContentControl.Content}"
                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Value="{x:Null}"
                                 Property="ContentControl.Content">
                            <Setter TargetName="content"
                                    Property="FrameworkElement.Margin"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="UIElement.IsKeyboardFocused"
                                 Value="True" />
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FF2269BF" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FF2269BF" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter Property="Control.Foreground"
                                    Value="#FFADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnReparsing"
           TargetType="{x:Type Button}">
        <Setter Property="Control.Background"
                Value="#FF287DDC" />
        <Setter Property="Control.Foreground"
                Value="#FFFFFFFF" />
        <Setter Property="Control.FontSize"
                Value="16" />
        <Setter Property="Control.FontWeight"
                Value="Regular" />
        <Setter Property="Control.FontFamily"
                Value="{StaticResource iconfont}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Name="content"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          Content="{TemplateBinding ContentControl.Content}"
                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted"
                                 Value="True">
                            <Setter TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                    Property="Border.BorderBrush" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="Border.Background"
                                    Value="#FF59ABF0" />
                            <Setter TargetName="border"
                                    Property="Border.BorderBrush"
                                    Value="#FF3C7FB1" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="Border.Background"
                                    Value="#FFC4E5F6" />
                            <Setter TargetName="border"
                                    Property="Border.BorderBrush"
                                    Value="#FF2C628B" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter TargetName="border"
                                    Property="Border.Background"
                                    Value="#FF8B8B8B" />
                            <Setter TargetName="border"
                                    Property="Border.BorderBrush"
                                    Value="#FFADB2B5" />
                            <Setter TargetName="content"
                                    Property="TextElement.Foreground"
                                    Value="#FF222222" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnRelateFixModel"
           TargetType="{x:Type Button}">
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="FrameworkElement.VerticalAlignment"
                Value="Center" />
        <Setter Property="Control.FontFamily"
                Value="{StaticResource iconfont}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Chrome"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Name="content"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          Content="{TemplateBinding ContentControl.Content}"
                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FF2269BF" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FF2269BF" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter Property="Control.Foreground"
                                    Value="#FFADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnMerge"
           BasedOn="{StaticResource btnFill}"
           TargetType="{x:Type Button}">
        <Setter Property="Control.Foreground"
                Value="#FF7D8198" />
        <Setter Property="Control.FontSize"
                Value="12" />
    </Style>
    <Style x:Key="btnMarkerToolStyle"
           TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Cursor"
                Value="Hand" />
        <Setter Property="Control.Foreground"
                Value="#FF454859" />
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="FrameworkElement.Width"
                Value="24" />
        <Setter Property="FrameworkElement.Height"
                Value="24" />
        <Setter Property="FrameworkElement.Margin"
                Value="0,6,0,0" />
        <Setter Property="Control.FontSize"
                Value="14" />
        <Setter Property="Control.FontFamily"
                Value="{StaticResource iconfont}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Chrome"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Name="content"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding ContentControl.Content}"
                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsKeyboardFocused"
                                 Value="True" />
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FF2269BF" />
                            <Setter TargetName="Chrome"
                                    Property="Border.Background"
                                    Value="#FFC6CBEA" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FF2269BF" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter Property="Control.Foreground"
                                    Value="#FFADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ContentButton"
           TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter TargetName="border"
                                    Property="UIElement.Opacity"
                                    Value="0.56" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="Border.BorderBrush"
                                    Value="#FF7EB4EA" />
                        </Trigger>
                        <Trigger Property="UIElement.IsKeyboardFocused"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="Border.BorderBrush"
                                    Value="#FF569DE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnStyleReparse"
           TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Cursor"
                Value="Hand" />
        <Setter Property="Control.Foreground"
                Value="#FFC6CBEA" />
        <Setter Property="Control.HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                      Content="{TemplateBinding ContentControl.Content}"
                                      ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsKeyboardFocused"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FFFFFFFF" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FFFFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Offset="0"
                      Color="#F3F3F3" />
        <GradientStop Offset="0.5"
                      Color="#EBEBEB" />
        <GradientStop Offset="0.5"
                      Color="#DDDDDD" />
        <GradientStop Offset="1"
                      Color="#CDCDCD" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder"
                     Color="#FF707070" />
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                               SnapsToDevicePixels="True"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeDashArray="1 2"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnStyleUseNewVersion"
           TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.FocusVisualStyle"
                Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Control.Background"
                Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="Control.BorderBrush"
                Value="{StaticResource ButtonNormalBorder}" />
        <Setter Property="Control.BorderThickness"
                Value="1" />
        <Setter Property="Control.Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Control.HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Control.Padding"
                Value="1" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Chrome"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            CornerRadius="4"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsKeyboardFocused"
                                 Value="True" />
                        <Trigger Property="ButtonBase.IsPressed"
                                 Value="True">
                            <Setter TargetName="Chrome"
                                    Property="Border.Background"
                                    Value="#99287DDC" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked"
                                 Value="true" />
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter Property="Control.Foreground"
                                    Value="#FFADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnDelete"
           BasedOn="{StaticResource btnFill}"
           TargetType="{x:Type Button}">
        <Setter Property="Control.FontSize"
                Value="10" />
        <Setter Property="Control.Foreground"
                Value="#FF7D8198" />
        <Setter Property="FrameworkElement.Margin"
                Value="0" />
    </Style>
    <Style x:Key="OcrItemToggleButton"
           TargetType="{x:Type RadioButton}">
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border BorderBrush="{TemplateBinding Control.Background}"
                            BorderThickness="0">
                        <Grid Name="BtnName"
                              Background="{TemplateBinding Control.Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter Property="Control.Background"
                                    Value="#FFEFF9FF" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed"
                                 Value="True">
                            <Setter Property="UIElement.Opacity"
                                    Value="0.7" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked"
                                 Value="True">
                            <Setter Property="Control.Background"
                                    Value="#FFB8D0DF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EditModelRadioButton"
           TargetType="{x:Type RadioButton}">
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="Control.FontSize"
                Value="14" />
        <Setter Property="Control.FontFamily"
                Value="PingFangSC-Regular" />
        <Setter Property="Control.Foreground"
                Value="#FF949CB3" />
        <Setter Property="FrameworkElement.VerticalAlignment"
                Value="Center" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border BorderBrush="{TemplateBinding Control.Background}"
                            BorderThickness="0">
                        <Grid Name="BtnName"
                              Background="{TemplateBinding Control.Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FF407CD5" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed"
                                 Value="True">
                            <Setter Property="UIElement.Opacity"
                                    Value="0.7" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FF407CD5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RecognizeAreaContentItemRadioButton"
           TargetType="{x:Type RadioButton}">
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="Control.BorderBrush"
                Value="#FFCCCCCC" />
        <Setter Property="Control.FontSize"
                Value="12" />
        <Setter Property="Control.FontFamily"
                Value="PingFangSC-Regular" />
        <Setter Property="Control.Foreground"
                Value="#FF666666" />
        <Setter Property="FrameworkElement.VerticalAlignment"
                Value="Stretch" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Name="bd"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}">
                        <ContentPresenter Margin="10,0"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter TargetName="bd"
                                    Property="Border.BorderBrush"
                                    Value="#FF407CD5" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked"
                                 Value="True">
                            <Setter Property="Control.Background"
                                    Value="#FFFFFFFF" />
                            <Setter TargetName="bd"
                                    Property="Border.BorderBrush"
                                    Value="#FF407CD5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>