<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="CheckBoxStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="lbStyleSelectIndicator"
           TargetType="{x:Type ListBox}">
        <Setter Property="Control.Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Control.BorderBrush"
                Value="#FF828790" />
        <Setter Property="Control.BorderThickness"
                Value="1" />
        <Setter Property="Control.Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Name="Bd"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            Background="{TemplateBinding Control.Background}"
                            Padding="1"
                            SnapsToDevicePixels="True"
                            CornerRadius="4">
                        <ScrollViewer Focusable="False"
                                      CanContentScroll="False"
                                      Template="{DynamicResource ScrollViewerControlTemplate1}"
                                      Padding="{TemplateBinding Control.Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                    Property="Border.Background" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ItemsControl.IsGrouping"
                                           Value="True" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="False" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="lbiStyleSelectDataModels"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="FrameworkElement.Height"
                Value="28" />
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="Control.HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.Padding"
                Value="2,0,0,0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Bd"
                            Margin="10,0,10,0"
                            Padding="{TemplateBinding Control.Padding}"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <CheckBox IsChecked="{TemplateBinding ListBoxItem.IsSelected}"
                                      IsHitTestVisible="False"
                                      Style="{StaticResource cbStyleSelectIndicator}" />
                            <ContentPresenter Grid.Column="1"
                                              Margin="10,0,0,0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ListBoxItem.IsSelected"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FF287DDC" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FF287DDC" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ListBoxItem.IsSelected"
                                           Value="True" />
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"
                                    Property="Border.Background" />
                            <Setter Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"
                                    Property="Control.Foreground" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                    Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="lbiStyleSelectOcrStableModels"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="FrameworkElement.Height"
                Value="30" />
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="Control.Foreground"
                Value="#FF666666" />
        <Setter Property="Control.HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <CheckBox Margin="10,0,0,0"
                                      IsChecked="{TemplateBinding ListBoxItem.IsSelected}"
                                      IsHitTestVisible="False"
                                      Style="{StaticResource cbStyleSelectIndicator}" />
                            <ContentPresenter Grid.Column="1"
                                              Margin="10,0,10,0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ListBoxItem.IsSelected"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FF333333" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter Property="Control.Background"
                                    Value="#FFBFD8FD" />
                            <Setter Property="Control.Foreground"
                                    Value="#FF333333" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ListBoxItem.IsSelected"
                                           Value="True" />
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"
                                    Property="Border.Background" />
                            <Setter Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"
                                    Property="Control.Foreground" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                    Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="lbiStyleSelectSingleSelect"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="FrameworkElement.Height"
                Value="28" />
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="Control.HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.Padding"
                Value="2,0,0,0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Bd"
                            Margin="10,0,10,0"
                            Padding="{TemplateBinding Control.Padding}"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <RadioButton IsChecked="{TemplateBinding ListBoxItem.IsSelected}"
                                         IsHitTestVisible="False" />
                            <ContentPresenter Grid.Column="1"
                                              Margin="10,0,0,0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ListBoxItem.IsSelected"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FF287DDC" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FF287DDC" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ListBoxItem.IsSelected"
                                           Value="True" />
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"
                                    Property="Border.Background" />
                            <Setter Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"
                                    Property="Control.Foreground" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                    Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="lbiStyleSelectIndicators"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="FrameworkElement.Height"
                Value="28" />
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="Control.HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.Padding"
                Value="2,0,0,0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Bd"
                            Margin="0"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            Background="{TemplateBinding Control.Background}"
                            Padding="{TemplateBinding Control.Padding}"
                            SnapsToDevicePixels="True">
                        <Grid HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <CheckBox Style="{StaticResource cbStyleSelectIndicator}"
                                      IsChecked="{TemplateBinding ListBoxItem.IsSelected}"
                                      IsHitTestVisible="False"
                                      Margin="10,0,0,0" />
                            <ContentPresenter Grid.Column="1"
                                              Margin="5,0,10,0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ListBoxItem.IsSelected"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FF287DDC" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FF287DDC" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ListBoxItem.IsSelected"
                                           Value="True" />
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"
                                    Property="Border.Background" />
                            <Setter Property="Control.Foreground"
                                    Value="#FF287DDC" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                    Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="lbiStyleSelectIndicator"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="FrameworkElement.Height"
                Value="28" />
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="Control.HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.Padding"
                Value="2,0,0,0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Bd"
                            Margin="0,0,0,0"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            Background="{TemplateBinding Control.Background}"
                            Padding="{TemplateBinding Control.Padding}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                          Margin="10,0,10,0"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ListBoxItem.IsSelected"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FF287DDC" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FF287DDC" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ListBoxItem.IsSelected"
                                           Value="True" />
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"
                                    Property="Border.Background" />
                            <Setter Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"
                                    Property="Control.Foreground" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                    Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxItemDataModelStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border BorderBrush="#FFDDDDDD"
                            Background="#00FFFFFF"
                            BorderThickness="0 1 0 0"
                            Width="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=ActualWidth}">
                        <ContentPresenter Name="contentPresenter" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ListBoxItem.IsSelected"
                                 Value="True">
                            <Setter TargetName="contentPresenter"
                                    Property="TextBlock.Foreground"
                                    Value="#FF3DBD7D" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter TargetName="contentPresenter"
                                    Property="TextBlock.Foreground"
                                    Value="#FF3DBD7D" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxItemOcrTemplateStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="bd"
                            BorderBrush="#FFDDDDDD"
                            BorderThickness="0"
                            Width="{Binding RelativeSource={RelativeSource AncestorType=ItemsPresenter}, Path=ActualWidth}">
                        <ContentPresenter Name="contentPresenter" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ListBoxItem.IsSelected"
                                 Value="True">
                            <Setter TargetName="contentPresenter"
                                    Property="TextBlock.Foreground"
                                    Value="#FF3DBD7D" />
                            <Setter TargetName="bd"
                                    Property="Border.Background"
                                    Value="#FFEFF9FF" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter TargetName="contentPresenter"
                                    Property="TextBlock.Foreground"
                                    Value="#FF3DBD7D" />
                            <Setter TargetName="bd"
                                    Property="Border.Background"
                                    Value="#FFEFF9FF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxItemOcrAnchorAndRecognizeAreaStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="bd"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="#FFDDDDDD"
                            BorderThickness="0"
                            Width="{Binding RelativeSource={RelativeSource AncestorType=ItemsPresenter}, Path=ActualWidth}">
                        <ContentPresenter Name="contentPresenter" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ListBoxItem.IsSelected"
                                 Value="True">
                            <Setter TargetName="contentPresenter"
                                    Property="TextBlock.Foreground"
                                    Value="#FF3DBD7D" />
                            <Setter TargetName="bd"
                                    Property="Border.Background"
                                    Value="#FFEFF9FF" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter TargetName="contentPresenter"
                                    Property="TextBlock.Foreground"
                                    Value="#FF3DBD7D" />
                            <Setter TargetName="bd"
                                    Property="Border.Background"
                                    Value="#FFEFF9FF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex"
                     Value="1">
                <Setter Property="Control.Background"
                        Value="#FFF8F8F8" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ListBoxItemSetFieldOcrTemplateModelStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="FrameworkElement.Height"
                Value="30" />
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="Control.HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Bd"
                            Padding="{TemplateBinding Control.Padding}"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ListBoxItem.IsSelected"
                                 Value="True">
                            <Setter TargetName="Bd"
                                    Property="Border.Background"
                                    Value="#FFDEEBFE" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Bd"
                                    Property="Border.Background"
                                    Value="#FFDEEBFE" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LBOcrsTABLEModelEntityStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="FrameworkElement.Height"
                Value="30" />
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="Control.Foreground"
                Value="#FF666666" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Bd"
                            Padding="{TemplateBinding Control.Padding}"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}">
                        <ContentPresenter Margin="10,0"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ListBoxItem.IsSelected"
                                 Value="True">
                            <Setter TargetName="Bd"
                                    Property="Border.Background"
                                    Value="#FFBFD8FD" />
                            <Setter Property="Control.Foreground"
                                    Value="#FF333333" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Bd"
                                    Property="Border.Background"
                                    Value="#FFBFD8FD" />
                            <Setter Property="Control.Foreground"
                                    Value="#FF333333" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxItemRegionIcludeStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="FrameworkElement.Height"
                Value="27" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="bd"
                            Background="#00FFFFFF"
                            BorderBrush="#FFDDDDDD">
                        <ContentPresenter Name="contentPresenter"
                                          TextBlock.Foreground="#FF7D8198" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ListBoxItem.IsSelected"
                                 Value="True">
                            <Setter TargetName="contentPresenter"
                                    Property="TextBlock.Foreground"
                                    Value="#FF287DDC" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LbiStyleRuleOutput"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="FrameworkElement.Height"
                Value="28" />
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="Control.HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.Padding"
                Value="2,0,0,0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Bd"
                            Margin="10,0,10,0"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            Background="{TemplateBinding Control.Background}"
                            Padding="{TemplateBinding Control.Padding}"
                            SnapsToDevicePixels="True">
                        <Grid HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter />
                            <CheckBox Grid.Column="1"
                                      Cursor="Hand"
                                      Style="{StaticResource cbStyleSelectIndicator}"
                                      IsChecked="{TemplateBinding ListBoxItem.IsSelected}"
                                      IsHitTestVisible="False" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LbiStyleOutputField"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="FrameworkElement.Height"
                Value="28" />
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="Control.HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.Padding"
                Value="2,0,0,0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Bd"
                            Margin="10,0,10,0"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            Background="{TemplateBinding Control.Background}"
                            Padding="{TemplateBinding Control.Padding}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxItemTaskStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border BorderBrush="#FFDDDDDD"
                            Background="#00FFFFFF"
                            BorderThickness="0"
                            Width="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=ActualWidth}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxItemTextSearchStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="FrameworkElement.MinHeight"
                Value="102" />
        <Setter Property="FrameworkElement.Width"
                Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ScrollViewer}, Path=ViewportWidth, Mode=OneWay}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <Border BorderBrush="#FFDDDDDD"
                                Margin="0,0,0,1"
                                Background="{TemplateBinding Control.Background}"
                                BorderThickness="0">
                            <ContentPresenter />
                        </Border>
                        <Rectangle Height="1"
                                   StrokeThickness="1"
                                   StrokeDashArray="1,2"
                                   VerticalAlignment="Bottom"
                                   Stroke="#FFDDDDDD" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter Property="Control.Background"
                                    Value="#FFC6CBEA" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="lbiStyleFilterCondition"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="FrameworkElement.Height"
                Value="26" />
        <Setter Property="Control.Background"
                Value="#00FFFFFF" />
        <Setter Property="BorderThickness"
                Value="0 0 0 1" />
        <Setter Property="BorderBrush"
                Value="#ddd" />

        <Setter Property="Control.HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.Padding"
                Value="2,0,0,0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Bd"
                            Margin="0,0,0,0"
                            Padding="{TemplateBinding Control.Padding}"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                            <ContentPresenter Margin="10,0,0,0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ListBoxItem.IsSelected"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FF287DDC" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter Property="Control.Foreground"
                                    Value="#FF287DDC" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ListBoxItem.IsSelected"
                                           Value="True" />
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"
                                    Property="Border.Background" />
                            <Setter Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"
                                    Property="Control.Foreground" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                    Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>